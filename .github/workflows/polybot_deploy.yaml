name: Deploy Polybot to Argo CD

on:
  push:
    branches:
      - main
    paths:
      - 'polybot/**'
      - 'ARGOCD/polybotinfra/polybot-deployment.yaml' # Trigger on changes to the deployment manifest as well

permissions:
  contents: write # Grant write permission to the repository contents

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}  # Required for pushing changes

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image
        run: |
          cd polybot
          IMAGE_NAME=$DOCKERHUB_USERNAME/polybot:v1.1.${{ github.run_number }}
          docker build --push -t $IMAGE_NAME .
          echo "image build and pushed: $IMAGE_NAME"

      - name: Update Argo CD Image Tag
        run: |
          IMAGE_NAME=$DOCKERHUB_USERNAME/polybot:v1.1.${{ github.run_number }}
          yq -i ".spec.template.spec.containers[0].image = \"$IMAGE_NAME\"" ARGOCD/polybotinfra/polybot-deployment.yaml
          echo "Updated Argo CD deployment manifest with image: $IMAGE_NAME"

      - name: Commit and Push changes to Argo CD Repo
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add ARGOCD/polybotinfra/polybot-deployment.yaml
          git commit -m "Update Polybot image to $IMAGE_NAME"
          git push origin HEAD:${{ github.ref_name }} # Push to the same branch that triggered the workflow
          echo "Pushed updated Argo CD manifest"

      - name: List Argo CD Manifest Contents
        if: github.event_name == 'push'
        run: ls -al ARGOCD/polybotinfra/